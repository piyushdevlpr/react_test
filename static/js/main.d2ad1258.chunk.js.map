{"version":3,"sources":["redux/action/getTodos.js","Firebase.js","components/NewsFeed.js","components/CreateTodos.js","App.js","serviceWorker.js","redux/reducer/index.js","redux/reducer/getTodos.js","redux/configureStore.js","index.js"],"names":["addTodos","todo","type","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","NewsFeed","state","curUrlEverything","curUrlTop","base","query","items","isLoaded","loadMoreB","loadingClicks","page","fetchNow","same","burl","setState","console","log","url","fetch","then","res","json","result","articles","fetchClicks","error","fetchNew","fetchCat","cat","loadMore","window","innerHeight","document","documentElement","scrollTop","scrollingElement","scrollHeight","firestore","collection","get","response","m","Map","forEach","doc","set","id","data","count","handleChange","event","target","name","value","incrementClick","title","reff","exists","update","clicks","FieldValue","increment","location","replace","addEventListener","this","removeEventListener","Navbar","sticky","bg","variant","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","className","Link","onClick","Container","fluid","Row","Col","md","Form","Group","controlId","Control","placeholder","onChange","map","article","Card","border","Header","author","Img","src","urlToImage","Body","Title","Text","description","Footer","source","style","float","Spinner","animation","role","size","display","justifyContent","alignItems","Component","CreateTodos","date","handleSubmit","preventDefault","props","actions","onSubmit","connect","ownProps","todos","dispatch","bindActionCreators","todoActions","App","exact","path","component","Boolean","hostname","match","rootReducer","combineReducers","action","initialState","store1","createStore","ReactDOM","render","Fragment","store","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.d2ad1258.chunk.js","sourcesContent":["export function addTodos(todo) {\n  // debugger;\n  return { type: \"ADD_TODOS\", todo };\n}\n","import * as firebase from \"firebase\";\nimport firestore from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBpQzI7Bq2KJ-XM08-UQ8aWhE4aRLKOd2g\",\n  authDomain: \"newsweb-9652b.firebaseapp.com\",\n  databaseURL: \"https://newsweb-9652b.firebaseio.com\",\n  projectId: \"newsweb-9652b\",\n  storageBucket: \"newsweb-9652b.appspot.com\",\n  messagingSenderId: \"644221807054\",\n  appId: \"1:644221807054:web:bde2e890db99544476a39f\",\n};\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as todoActions from \"../redux/action/getTodos\";\nimport { bindActionCreators } from \"redux\";\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n  Card,\n  Form,\n  ListGroup,\n  Navbar,\n  Nav,\n  FormControl,\n  Spinner,\n} from \"react-bootstrap\";\nimport firebase from \"../Firebase\";\n\nclass NewsFeed extends Component {\n  state = {\n    curUrlEverything: \"http://newsapi.org/v2/everything?\",\n    curUrlTop: \"http://newsapi.org/v2/top-headlines?country=in&\",\n    base: true,\n    apiKey: \"269eea8eaa2b47858b5a4dd3ec3997e2\",\n    query: \"\",\n    items: [],\n    isLoaded: false,\n    loadMoreB: false,\n    loadingClicks: true,\n    page: 1,\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.loadMore);\n    this.fetchNow(false, this.state.curUrlTop);\n  }\n  fetchNow = (same, burl) => {\n    if (!this.state.query && !this.state.base) {\n      return;\n    }\n    this.setState({ isLoaded: false });\n    console.log(this.state.page);\n    var url =\n      burl +\n      \"q=\" +\n      this.state.query +\n      \"&\" +\n      \"page=\" +\n      this.state.page +\n      \"&\" +\n      \"apiKey=\" +\n      this.state.apiKey;\n    fetch(url)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          if (same) {\n            this.setState(\n              {\n                isLoaded: true,\n                items: [...this.state.items, ...result.articles],\n                loadMoreB: false,\n              },\n              () => {\n                this.fetchClicks();\n                console.log(this.state.items);\n              }\n            );\n          } else {\n            this.setState(\n              {\n                isLoaded: true,\n                items: result.articles,\n              },\n              () => {\n                this.fetchClicks();\n                console.log(result);\n              }\n            );\n          }\n        },\n        (error) => {\n          this.setState(\n            {\n              isLoaded: true,\n              loadMoreB: false,\n              error,\n            },\n            () => {\n              console.log(\"no more news found\");\n            }\n          );\n        }\n      );\n  };\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.loadMore);\n  }\n  fetchNew = (page) => {\n    this.state.base\n      ? this.fetchNow(true, this.state.curUrlTop)\n      : this.fetchNow(true, this.state.curUrlEverything);\n  };\n  fetchCat = (cat) => {\n    this.setState({ query: cat }, () => {\n      this.fetchNow(false, this.state.curUrlEverything);\n    });\n  };\n  loadMore = () => {\n    if (\n      window.innerHeight + document.documentElement.scrollTop >=\n        document.scrollingElement.scrollHeight - 1500 &&\n      !this.state.loadMoreB\n    ) {\n      // Do load more content here!\n      if (this.state.page >= 5) {\n        console.log(\"developer account reached\");\n      } else {\n        this.setState({ loadMoreB: true, page: this.state.page + 1 }, () => {\n          this.fetchNew(this.state.page);\n        });\n      }\n    }\n  };\n  fetchClicks = () => {\n    firebase\n      .firestore()\n      .collection(\"clicks\")\n      .get()\n      .then((response) => {\n        let m = new Map();\n        response.forEach(function (doc) {\n          // doc.data() is never undefined for query doc snapshots\n          m.set(doc.id, doc.data());\n          console.log(doc.id, \" => \", doc.data());\n        });\n        this.setState({ count: m, loadingClicks: false }, () => {\n          console.log(this.state.count);\n        });\n      });\n  };\n  handleChange = (event) => {\n    this.setState(\n      { [event.target.name]: event.target.value, page: 1, base: false },\n      () => {\n        this.fetchNow(false, this.state.curUrlEverything);\n      }\n    );\n  };\n  incrementClick = (url, title) => {\n    var reff = firebase.firestore().collection(\"clicks\").doc(title);\n\n    reff.get().then((res) => {\n      if (res.exists) {\n        reff\n          .update({\n            clicks: firebase.firestore.FieldValue.increment(1),\n          })\n          .then(() => {\n            window.location.replace(url);\n          });\n      } else {\n        reff.set({ clicks: 1 }).then(() => {\n          window.location.replace(url);\n        });\n      }\n    });\n  };\n  render() {\n    return (\n      <>\n        <Navbar sticky=\"top\" bg=\"dark\" variant=\"dark\" expand=\"lg\">\n          <Navbar.Brand href=\"#home\">React News</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link\n                onClick={() => {\n                  this.fetchCat(\"sports\");\n                }}\n              >\n                Sports |\n              </Nav.Link>\n              <Nav.Link\n                onClick={() => {\n                  this.fetchCat(\"politics\");\n                }}\n              >\n                Politics |\n              </Nav.Link>\n              <Nav.Link\n                onClick={() => {\n                  this.fetchCat(\"technology\");\n                }}\n              >\n                Technology |\n              </Nav.Link>\n              <Nav.Link\n                onClick={() => {\n                  this.fetchCat(\"entertainment\");\n                }}\n              >\n                Entertainment |\n              </Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <Container fluid>\n          <Row>\n            <Col></Col>\n            <Col md={6}>\n              <h1>Hello ! Here is Your News Feed</h1>\n            </Col>\n            <Col></Col>\n          </Row>\n\n          <Row>\n            <Col></Col>\n            <Col md={6}>\n              <Form>\n                <Form.Group controlId=\"formBasicEmail\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Search\"\n                    value={this.state.query}\n                    onChange={this.handleChange}\n                    name=\"query\"\n                  />\n                </Form.Group>\n              </Form>\n            </Col>\n            <Col></Col>\n          </Row>\n          <Row>\n            <Col></Col>\n            <Col md={6}>\n              {this.state.isLoaded ? (\n                this.state.items.map((article) => (\n                  <>\n                    <Card\n                      onClick={() => {\n                        this.incrementClick(article.url, article.title);\n                      }}\n                      border=\"primary\"\n                    >\n                      <Card.Header>\n                        {article.author ? article.author : \"News Flash\"}\n                      </Card.Header>\n                      <Card.Img variant=\"top\" src={article.urlToImage} />\n                      <Card.Body>\n                        <Card.Title>{article.title}</Card.Title>\n                        <Card.Text>{article.description}</Card.Text>\n                      </Card.Body>\n                      <Card.Footer>\n                        <span>{article.source.name}</span>\n                        <span style={{ float: \"right\" }}>\n                          Clicks{\" \"}\n                          {this.state.loadingClicks ? (\n                            <Spinner animation=\"border\" role=\"status\" size=\"sm\">\n                              <span className=\"sr-only\">Loading...</span>\n                            </Spinner>\n                          ) : this.state.count.get(article.title) ? (\n                            this.state.count.get(article.title).clicks\n                          ) : (\n                            0\n                          )}\n                        </span>\n                      </Card.Footer>\n                    </Card>\n                    <br />\n                  </>\n                ))\n              ) : (\n                <span\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <Spinner animation=\"border\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                  </Spinner>\n                </span>\n              )}\n            </Col>\n            <Col></Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default NewsFeed;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as todoActions from \"../redux/action/getTodos\";\nimport { bindActionCreators } from \"redux\";\n\nclass CreateTodos extends Component {\n  state = {\n    todo: \"\",\n    date: \"\",\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.actions.addTodos(this.state.todo);\n  };\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  render() {\n    return (\n      <div>\n        <h1>Create a New Todo Here</h1>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            name=\"todo\"\n            type=\"text\"\n            placeholder=\"Enter Todo\"\n            onChange={this.handleChange}\n            value={this.state.todo}\n          />\n          <input\n            name=\"date\"\n            type=\"text\"\n            placeholder=\"Enter Date & Time\"\n            onChange={this.handleChange}\n            value={this.state.date}\n          />\n          <input type=\"submit\" name=\"Save\" value=\"Save\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return { todos: state.todos };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: {\n      addTodos: bindActionCreators(todoActions.addTodos, dispatch),\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateTodos);\n","import React from \"react\";\nimport { Route, Switch, NavLink } from \"react-router-dom\";\nimport NewsFeed from \"./components/NewsFeed\";\nimport CreateTodos from \"./components/CreateTodos\";\n\nfunction App() {\n  return (\n    <>\n      {/* <NavLink to=\"/\">Home</NavLink> | <NavLink to=\"/create\">Create</NavLink> */}\n      <Switch>\n        <Route exact path=\"/\" component={NewsFeed} />\n        <Route path=\"/create\" component={CreateTodos} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport todos from \"./getTodos\";\n\nconst rootReducer = combineReducers({\n  todos,\n});\n\nexport default rootReducer;\n","export default function getTodos(\n  state = [\"idea for Aatmanirbhar app\", \"Redux course complete\"],\n  action\n) {\n  if (action.type === \"ADD_TODOS\") {\n    return [...state, action.todo];\n  } else {\n    return state;\n  }\n}\n\n// every reducer will point to a single state variable with the name in index.js reducer, here the name is todos and var is array\n","import rootReducer from \"./reducer/index\";\nimport { createStore } from \"redux\";\n\nexport default function configureStore(initialState) {\n  return createStore(rootReducer, initialState);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/configureStore\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst store1 = store();\n\nReactDOM.render(\n  <React.Fragment>\n    <Router>\n      <Provider store={store1}>\n        <App />\n      </Provider>\n    </Router>\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}